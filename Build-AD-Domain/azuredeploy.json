{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",

  "contentVersion": "1.0.0.0",

  "parameters": {
    "CompanyID": {
      "type": "string",
      "defaultValue": "TMC",
      "metadata": {
        "description": "Short company ID for use in naming resources."
      }
    },
    "DomainControllerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 0,
      "maxValue": 2,
      "metadata": {
        "description": "Number of domain controllers to deploy."
      }
    },
    "WebServerCount": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 3,
      "metadata": {
        "description": "Number of domain-joined web servers to deploy."
      }
    },
    "WebDomainJoin": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Join web servers to domain?."
      }
    },
    "AppServerCount": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 3,
      "metadata": {
        "description": "Number of domain-joined application servers to deploy."
      }
    },
    "AppDomainJoin": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Join application servers to domain?."
      }
    },
    "DomainName": {
      "type": "string",
      "defaultValue": "timco.com",
      "metadata": {
        "description": "FQDN of the AD Domain to be created."
      }
    },
    "AdminUserName": {
      "type": "string",
      "defaultValue": "timco-admin",
      "minLength": 1,
      "metadata": {
        "description": "Administrator username."
      }
    },
    "AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password."
      }
    },
    "SafeModePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Safe mode password for domain controllers."
      }
    }
  },

  "variables": {
    "varArtifactsLocation": "https://raw.github.com/timblewitt/TimCo/master",
    "varDscConfigurationDataUrl": "https://raw.githubusercontent.com/timblewitt/TimCo/master/Build-AD-Domain/timco-dsc1.psd1",
    "varCompanyId": "[toLower(parameters('CompanyID'))]",
    "varVmStorAccName": "[concat('stg', variables('varCompanyId'), 'mon',uniqueString(resourceGroup().id))]",
    "varVmStorAccType": "Standard_LRS",
    "varNetworkWatcher": "[concat('nww-',variables('varCompanyId'),'-',resourceGroup().location)]",
    "varLogAnalyticsWorkspace": "[concat('law-',variables('varCompanyId'),'-',resourceGroup().location)]",
    "varAdcAvailabilitySet": "[concat('avs-',variables('varCompanyId'),'-adc')]",
    "varWebAvailabilitySet": "[concat('avs-',variables('varCompanyId'),'-web')]",
    "varAppAvailabilitySet": "[concat('avs-',variables('varCompanyId'),'-app')]",
    "varVNet1Name": "[concat('vnet-',variables('varCompanyId'),'-',resourceGroup().location,'-01')]",
    "varVNet1Prefix": "10.201.0.0/16",
    "varVNet1Subnet1Name": "[concat('sbnt-',variables('varCompanyId'),'-',resourceGroup().location,'-mgt')]",
    "varVNet1Subnet1Prefix": "10.201.11.0/24",
    "varVNet1Subnet1NSGName": "[concat('nsg-',variables('varCompanyId'),'-',resourceGroup().location,'-mgt')]",
    "varVNet1Subnet2Name": "[concat('sbnt-',variables('varCompanyId'),'-',resourceGroup().location,'-web')]",
    "varVNet1Subnet2Prefix": "10.201.21.0/24",
    "varVNet1Subnet2NSGName": "[concat('nsg-',variables('varCompanyId'),'-',resourceGroup().location,'-web')]",
    "varVNet1Subnet3Name": "[concat('sbnt-',variables('varCompanyId'),'-',resourceGroup().location,'-app')]",
    "varVNet1Subnet3Prefix": "10.201.22.0/24",
    "varVNet1Subnet3NSGName": "[concat('nsg-',variables('varCompanyId'),'-',resourceGroup().location,'-app')]",
    "varVNet1Subnet4Name": "[concat('sbnt-',variables('varCompanyId'),'-',resourceGroup().location,'-db')]",
    "varVNet1Subnet4Prefix": "10.201.23.0/24",
    "varVNet1Subnet4NSGName": "[concat('nsg-',variables('varCompanyId'),'-',resourceGroup().location,'-db')]",
    "varVNet1Subnet5Name": "GatewaySubnet",
    "varVNet1Subnet5Prefix": "10.201.255.224/27",
    "varVNet1Subnet5NSGName": "nsg-GatewaySubnet",
    "varWebLBName": "[concat('elb-',variables('varCompanyId'),'-',resourceGroup().location,'-web')]",
    "varWebLBNatRulesName": "timco-web-lb-nat-rules",
    "varWebLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('varWebLBName'))]",
    "varWebLBFEConfigName": "timco-WebLBFrontEnd",
    "varWebLBFEConfigID": "[concat(variables('varWebLBID'),'/frontendIPConfigurations/',variables('varWebLBFEConfigName'))]",
    "varWebLBBEPoolName": "timco-WebLBBackEndPool",
    "varWebLBBEPoolID": "[concat(variables('varWebLBID'),'/backendAddressPools/', variables('varWebLBBEPoolName'))]",
    "varWebLBProbeID": "[concat(variables('varWebLBID'),'/probes/tcpProbe')]",
    "varWebPIPName": "[concat(variables('varWebLBName'), '-pip1')]",
    "varWebPIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('varWebPIPName'))]",
    "varWebDNSPrefix": "[variables('varWebPrefix')]",
    "varAdcIPAddressPrefix": "10.201.11.",
    "varAdcStartIndex": 1,
    "varBdcStartIndex": "[add(variables('varAdcStartIndex'),1)]",
    "varWebStartIndex": 1,
    "varAppStartIndex": 1,
    "varAdcDNSServerAddress": "[concat(variables('varAdcIPAddressPrefix'), padLeft(variables('varAdcStartIndex'),2,'1'))]",
    "varBdcDNSServerAddress": "[concat(variables('varAdcIPAddressPrefix'), padLeft(variables('varBdcStartIndex'),2,'1'))]",
    "varDcCopyCount": "[if(equals(parameters('DomainControllerCount'), 0), 2, parameters('DomainControllerCount'))]",
    "varWebCopyCount": "[if(equals(parameters('WebServerCount'), 0), 1, parameters('WebServerCount'))]",
    "varAppCopyCount": "[if(equals(parameters('AppServerCount'), 0), 1, parameters('AppServerCount'))]",
    "varAdcPrefix": "[concat('vm-',variables('varCompanyId'),'-adc')]",
    "varWebPrefix": "[concat('vm-',variables('varCompanyId'),'-web')]",
    "varAppPrefix": "[concat('vm-',variables('varCompanyId'),'-app')]",
    "varVmSize": "Standard_D1_V2",
    "varVmWindowsOSVersion": "2016-Datacenter",
    "varVmImagePublisher": "MicrosoftWindowsServer",
    "varVmImageOffer": "WindowsServer",
    "varAdcDataDisk1SizeGB": "50",
    "varWebDataDisk1SizeGB": "50",
    "varAppDataDisk1SizeGB": "50",
    "varAdcSubNet": "variables('varVNet1Subnet1Name')",
    "varWebSubNet": "variables('varVNet1Subnet2Name')",
    "varAppSubNet": "variables('varVNet1Subnet3Name')",
    "varVmVNetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('varVNet1Name'))]",
    "varAdcSubnetRef": "[concat(variables('varVmVnetID'), '/subnets/', variables('varVNet1Subnet1Name'))]",
    "varWebSubnetRef": "[concat(variables('varVmVnetID'), '/subnets/', variables('varVNet1Subnet2Name'))]",
    "varAppSubnetRef": "[concat(variables('varVmVnetID'), '/subnets/', variables('varVNet1Subnet3Name'))]",
    "varWebDomainJoin": "[if(equals(parameters('DomainControllerCount'), 0), 'No', parameters('WebDomainJoin'))]",
    "varAppDomainJoin": "[if(equals(parameters('DomainControllerCount'), 0), 'No', parameters('AppDomainJoin'))]",
    "varDscArchiveFolder": "Build-AD-Domain",
    "varDscArchiveFileName": "timco-dsc1.zip",
    "varDscConfigScript": "timco-dsc1.ps1",
    "varDscConfigFunctionFirstDC": "FirstDC",
    "varDscConfigFunctionNextDC": "NextDC",
    "varDscConfigFunctionWebServer": "WebServer",
    "varDscConfigFunctionAppServer": "AppServer",
    "varDscForceUpdateVersion": "1.0",
    "varDomainDistinguishedName": "[concat('DC=',replace(parameters('DomainName'),'.',',DC='))]",
    "varOuPathWeb": "[concat('OU=Web,OU=Servers,OU=Computers,OU=Managed,', variables('varDomainDistinguishedName'))]",
    "varOuPathApp": "[concat('OU=Application,OU=Servers,OU=Computers,OU=Managed,', variables('varDomainDistinguishedName'))]",
    "varDomainAdminName": "[concat(parameters('AdminUserName'),'@', parameters('DomainName'))]",
    "varDomainJoinOptions": 3
  },

  "resources": [
    {
      "name": "[variables('varVmStorAccName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "Storage account"
      },
      "sku": {
        "name": "[variables('varVmStorAccType')]"
      },
      "kind": "StorageV2",
      "properties": {
      }
    },
    {
      "name": "[variables('varNetworkWatcher')]",
      "type": "Microsoft.Network/networkWatchers",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Network watcher"
      },
      "properties": {},
      "resources": []
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[variables('varLogAnalyticsWorkspace')]",
      "apiVersion": "2015-11-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[resourceGroup().location]"
      },
      "properties": {
        "features": {
          "searchVersion": 1
        },
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 730
      }
    },
    {
      "name": "[variables('varAdcAvailabilitySet')]",
      "type": "Microsoft.Compute/availabilitySets",
      "condition": "[greater(parameters('DomainControllerCount'),0)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "Availability set - domain controllers"
      },
      "properties": {
        "platformUpdateDomainCount": "5",
        "platformFaultDomainCount": "2"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('varWebAvailabilitySet')]",
      "type": "Microsoft.Compute/availabilitySets",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "Availability set - web servers"
      },
      "properties": {
        "platformUpdateDomainCount": "5",
        "platformFaultDomainCount": "2"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('varAppAvailabilitySet')]",
      "type": "Microsoft.Compute/availabilitySets",
      "condition": "[greater(parameters('AppServerCount'),0)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "Availability set - application servers"
      },
      "properties": {
        "platformUpdateDomainCount": "5",
        "platformFaultDomainCount": "2"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('varVNet1Subnet2NSGName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "NSG - Front End"
      },
      "properties": {
        "securityRules": [
          {
            "name": "NSG-Rule-Allow-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "NSG-Rule-Allow-HTTP",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('varVNet1Subnet3NSGName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "NSG - Back End"
      },
      "properties": {
        "securityRules": [
          {
            "name": "NSG-Rule-Allow-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('varVNet1Name')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('varVNet1Subnet2NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('varVNet1Subnet3NSGName'))]"
      ],
      "tags": {
        "displayName": "VNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('varVNet1Prefix')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": [
            "[variables('varAdcDNSServerAddress')]",
            "[variables('varBdcDNSServerAddress')]",
            "168.63.129.16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('varVNet1Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('varVNet1Subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('varVNet1Subnet3NSGName'))]"
              }
            }
          },
          {
            "name": "[variables('varVNet1Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('varVNet1Subnet2Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('varVNet1Subnet2NSGName'))]"
              }
            }
          },
          {
            "name": "[variables('varVNet1Subnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('varVNet1Subnet3Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('varVNet1Subnet2NSGName'))]"
              }
            }
          },
          {
            "name": "[variables('varVNet1Subnet4Name')]",
            "properties": {
              "addressPrefix": "[variables('varVNet1Subnet4Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('varVNet1Subnet2NSGName'))]"
              }
            }
          },
          {
            "name": "[variables('varVNet1Subnet5Name')]",
            "properties": {
              "addressPrefix": "[variables('varVNet1Subnet5Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('varVNet1Subnet2NSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-pip1')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[greater(parameters('DomainControllerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "PIPs - Primary DC"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'))]"
        }
      }
    },
    {
      "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'), '-pip1')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[greater(parameters('DomainControllerCount'),1)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "PIPs - Secondary DC"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'))]"
        }
      }
    },
    {
      "name": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'), '-pip1')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "webPipLoop",
        "count": "[variables('varWebCopyCount')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "PIPs - Web servers"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]"
        }
      }
    },
    {
      "name": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'), '-pip1')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[greater(parameters('AppServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "appPipLoop",
        "count": "[variables('varAppCopyCount')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "PIPs - Application servers"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]"
        }
      }
    },
    {
      "name": "[concat(variables('varWebLBName'), '-pip1')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
        "displayName": "PIP - Web load balancer"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('varWebDNSPrefix')]"
        }
      }
    },
    {
      "name": "[variables('varWebLBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('varWebPIPName'))]"
      ],
      "tags": {
        "displayName": "Web load balancer"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('varWebLBFEConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('varWebPIPID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('varWebLBBEPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('varWebLBFEConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('varWebLBBEPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('varWebLBProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('varWebLBName'), '/', 'RDP-VM', copyIndex(variables('varWebStartIndex')))]",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('varWebLBName'))]"
      ],
      "copy": {
        "name": "natRulesLoop",
        "count": "[if(equals(parameters('WebServerCount'),0),1,parameters('WebServerCount'))]"
      },
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('varWebLBFEConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[concat('5000', copyIndex(variables('varWebStartIndex')))]",
        "backendPort": 3389,
        "enableFloatingIP": false
      }
    },
    {
      "name": "[concat('nic-', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'),'-1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "condition": "[greater(parameters('DomainControllerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('varVNet1Name'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-pip1')]"
      ],
      "tags": {
        "displayName": "NICs - Primary DC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('varAdcIPAddressPrefix'), padLeft(variables('varAdcStartIndex'),2,'1'))]",
              "subnet": {
                "id": "[variables('varAdcSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-pip1'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat('nic-', variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'),'-1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "condition": "[greater(parameters('DomainControllerCount'),1)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('varVNet1Name'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-pip1')]"
      ],
      "tags": {
        "displayName": "NICs - Secondary DC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('varAdcIPAddressPrefix'), padLeft(variables('varBdcStartIndex'),2,'1'))]",
              "subnet": {
                "id": "[variables('varAdcSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'), '-pip1'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat('nic-', variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'),'-1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "webNicLoop",
        "count": "[variables('varWebCopyCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('varVNet1Name'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'), '-pip1')]",
        "[concat('Microsoft.Network/loadBalancers/', variables('varWebLBName'), '/inboundNatRules/', 'RDP-VM', copyIndex(variables('varWebStartIndex')))]"
      ],
      "tags": {
        "displayName": "NICS - Web servers"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('varWebLBBEPoolID')]",
                  "properties": {
                  }
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('varWebLBID'),'/inboundNatRules/RDP-VM', copyindex(1))]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('varWebSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'), '-pip1'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat('nic-', variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'),'-1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "condition": "[greater(parameters('AppServerCount'),0)]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "appNicLoop",
        "count": "[variables('varAppCopyCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('varVNet1Name'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'), '-pip1')]"
      ],
      "tags": {
        "displayName": "NICs - Application servers"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('varAppSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'), '-pip1'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[greater(parameters('DomainControllerCount'),0)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('varVmStorAccName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('varAdcAvailabilitySet'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic-', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'),'-1')]"
      ],
      "tags": {
        "displayName": "First domain controller"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('varVmSize')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('varVmStorAccName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('varAdcAvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'))]",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('varVmImagePublisher')]",
            "offer": "[variables('varVmImageOffer')]",
            "sku": "[variables('varVmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-OSDisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-DataDisk')]",
              "diskSizeGB": "[variables('varAdcDataDisk1SizeGB')]",
              "lun": 1,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '-1'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "DSC-ADC",
          "type": "extensions",
          "condition": "[greater(parameters('DomainControllerCount'),0)]",
          "apiVersion": "2017-12-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'))]"
          ],
          "tags": {
            "displayName": "DSC-ADC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[variables('varDscForceUpdateVersion')]",
            "settings": {
              "configuration": {
                "url": "[concat(variables('varArtifactsLocation'), '/', variables('varDscArchiveFolder'), '/', variables('varDscArchiveFileName'))]",
                "script": "[variables('varDscConfigScript')]",
                "function": "[variables('varDscConfigFunctionFirstDC')]"
              },
              "configurationArguments": {
                "NodeName": "[concat(variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'))]",
                "DNSServerAddress": "[variables('varAdcDNSServerAddress')]",
                "DomainName": "[parameters('DomainName')]"
              },
              "configurationData": {
                "url": "[variables('varDscConfigurationDataUrl')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('AdminUserName')]",
                  "Password": "[parameters('AdminPassword')]"
                },
                "SafeModeCreds": {
                  "UserName": "Administrator",
                  "Password": "[parameters('SafeModePassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[greater(parameters('DomainControllerCount'),1)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('varVmStorAccName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('varAdcAvailabilitySet'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic-', variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'),'-1')]"
      ],
      "tags": {
        "displayName": "Second domain controller"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('varVmSize')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('varVmStorAccName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('varAdcAvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'))]",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('varVmImagePublisher')]",
            "offer": "[variables('varVmImageOffer')]",
            "sku": "[variables('varVmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'), '-OSDisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'), '-DataDisk')]",
              "diskSizeGB": "[variables('varAdcDataDisk1SizeGB')]",
              "lun": 1,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'), '-1'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "DSC-BDC",
          "type": "extensions",
          "condition": "[greater(parameters('DomainControllerCount'),1)]",
          "apiVersion": "2017-12-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '/extensions/DSC-ADC')]"
          ],
          "tags": {
            "displayName": "DSC-BDC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[variables('varDscForceUpdateVersion')]",
            "settings": {
              "configuration": {
                "url": "[concat(variables('varArtifactsLocation'), '/', variables('varDscArchiveFolder'), '/', variables('varDscArchiveFileName'))]",
                "script": "[variables('varDscConfigScript')]",
                "function": "[variables('varDscConfigFunctionNextDC')]"
              },
              "configurationArguments": {
                "NodeName": "[concat(variables('varAdcPrefix'), padLeft(variables('varBdcStartIndex'),2,'0'))]",
                "DNSServerAddress": "[variables('varAdcDNSServerAddress')]",
                "DomainName": "[parameters('DomainName')]"
              },
              "configurationData": {
                "url": "[variables('varDscConfigurationDataUrl')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('AdminUserName')]",
                  "Password": "[parameters('AdminPassword')]"
                },
                "SafeModeCreds": {
                  "UserName": "Administrator",
                  "Password": "[parameters('SafeModePassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "name": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[greater(parameters('WebServerCount'),0)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "webVirtualMachineLoop",
        "count": "[variables('varWebCopyCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('varVmStorAccName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('varWebAvailabilitySet'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic-', variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'),'-1')]"
      ],
      "tags": {
        "displayName": "Web servers"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('varVmSize')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('varVmStorAccName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('varWebAvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('varVmImagePublisher')]",
            "offer": "[variables('varVmImageOffer')]",
            "sku": "[variables('varVmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'), '-OSDisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'), '-DataDisk')]",
              "diskSizeGB": "[variables('varWebDataDisk1SizeGB')]",
              "lun": 1,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'), '-1'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "[concat('DSC-Web',padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
          "type": "extensions",
          "condition": "[greater(parameters('WebServerCount'),0)]",
          "apiVersion": "2017-12-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]"
          ],
          "tags": {
            "displayName": "DSC-Web"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(variables('varArtifactsLocation'), '/', variables('varDscArchiveFolder'), '/', variables('varDscArchiveFileName'))]",
                "script": "[variables('varDscConfigScript')]",
                "function": "[variables('varDscConfigFunctionWebServer')]"
              },
              "configurationArguments": {
                "NodeName": "[concat(variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
                "DNSServerAddress": "[variables('varAdcDNSServerAddress')]",
                "DomainName": "[parameters('DomainName')]",
                "DomainJoin": "[variables('varWebDomainJoin')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "DomainAdminCreds": {
                  "UserName": "[parameters('AdminUserName')]",
                  "Password": "[parameters('AdminPassword')]"
                }
              }
            }
          }
        },
        {
          "name": "[concat('JoinDomain-Web',padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
          "type": "extensions",
          "condition": "[and(equals(variables('varWebDomainJoin'),'Yes'), greater(parameters('WebServerCount'),0))]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('varWebPrefix'), padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
            "[concat('DSC-Web',padLeft(copyIndex(variables('varWebStartIndex')),2,'0'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '/extensions/DSC-ADC')]"
          ],
          "tags": {
            "displayName": "JoinDomain-Web"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[variables('varDscForceUpdateVersion')]",
            "settings": {
              "Name": "[parameters('DomainName')]",
              "OUPath": "[variables('varOuPathWeb')]",
              "User": "[variables('varDomainAdminName')]",
              "Restart": "true",
              "Options": "[variables('varDomainJoinOptions')]"
            },
            "protectedSettings": {
              "Password": "[parameters('AdminPassword')]"
            }
          }
        }
      ]
    },
    {
      "name": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[greater(parameters('AppServerCount'),0)]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "appVirtualMachineLoop",
        "count": "[variables('varAppCopyCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('varVmStorAccName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('varWebAvailabilitySet'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic-', variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'),'-1')]"
      ],
      "tags": {
        "displayName": "Application servers"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('varVmSize')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('varVmStorAccName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('varAppAvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('varVmImagePublisher')]",
            "offer": "[variables('varVmImageOffer')]",
            "sku": "[variables('varVmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'), '-OSDisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'), '-DataDisk')]",
              "diskSizeGB": "[variables('varAppDataDisk1SizeGB')]",
              "lun": 1,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'), '-1'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "[concat('DSC-App',padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
          "type": "extensions",
          "condition": "[greater(parameters('AppServerCount'),0)]",
          "apiVersion": "2017-12-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]"
          ],
          "tags": {
            "displayName": "DSC-App"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(variables('varArtifactsLocation'), '/', variables('varDscArchiveFolder'), '/', variables('varDscArchiveFileName'))]",
                "script": "[variables('varDscConfigScript')]",
                "function": "[variables('varDscConfigFunctionAppServer')]"
              },
              "configurationArguments": {
                "NodeName": "[concat(variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
                "DNSServerAddress": "[variables('varAdcDNSServerAddress')]",
                "DomainName": "[parameters('DomainName')]",
                "DomainJoin": "[variables('varAppDomainJoin')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "DomainAdminCreds": {
                  "UserName": "[parameters('AdminUserName')]",
                  "Password": "[parameters('AdminPassword')]"
                }
              }
            }
          }
        },
        {
          "name": "[concat('JoinDomain-App',padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
          "type": "extensions",
          "condition": "[and(equals(variables('varAppDomainJoin'),'Yes'), greater(parameters('AppServerCount'),0))]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAppPrefix'), padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
            "[concat('DSC-App',padLeft(copyIndex(variables('varAppStartIndex')),2,'0'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('varAdcPrefix'), padLeft(variables('varAdcStartIndex'),2,'0'), '/extensions/DSC-ADC')]"
          ],
          "tags": {
            "displayName": "JoinDomain-App"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[variables('varDscForceUpdateVersion')]",
            "settings": {
              "Name": "[parameters('DomainName')]",
              "OUPath": "[variables('varOuPathApp')]",
              "User": "[variables('varDomainAdminName')]",
              "Restart": "true",
              "Options": "[variables('varDomainJoinOptions')]"
            },
            "protectedSettings": {
              "Password": "[parameters('AdminPassword')]"
            }
          }
        }
      ]
    }
  ],

  "outputs": {
  }
}